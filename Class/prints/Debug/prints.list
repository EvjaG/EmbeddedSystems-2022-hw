
prints.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000b3c  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000068  08000cdc  08000cdc  00010cdc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000d44  08000d44  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000d44  08000d44  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000d44  08000d44  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000d44  08000d44  00010d44  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000d48  08000d48  00010d48  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000d4c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000b8  20000064  08000db0  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000011c  08000db0  0002011c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000e70  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002e4  00000000  00000000  00020f04  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000080  00000000  00000000  000211e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000058  00000000  00000000  00021268  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000185cf  00000000  00000000  000212c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000b53  00000000  00000000  0003988f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00086bbe  00000000  00000000  0003a3e2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000c0fa0  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000004dc  00000000  00000000  000c0ff4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08000cc4 	.word	0x08000cc4

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	08000cc4 	.word	0x08000cc4

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:




int main(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0
	USART2_init();
 8000284:	f000 f82a 	bl	80002dc <USART2_init>
	USART2_printCharacter('t');
 8000288:	2074      	movs	r0, #116	; 0x74
 800028a:	f000 f855 	bl	8000338 <USART2_printCharacter>
	USART2_printCharacter('\n');
 800028e:	200a      	movs	r0, #10
 8000290:	f000 f852 	bl	8000338 <USART2_printCharacter>
    USART2_print("I love pizza!\n");
 8000294:	4803      	ldr	r0, [pc, #12]	; (80002a4 <main+0x24>)
 8000296:	f000 f869 	bl	800036c <USART2_print>
	print("Give me %d slices of that pizza!\n", 10);
 800029a:	210a      	movs	r1, #10
 800029c:	4802      	ldr	r0, [pc, #8]	; (80002a8 <main+0x28>)
 800029e:	f000 f805 	bl	80002ac <print>

    while(1)
 80002a2:	e7fe      	b.n	80002a2 <main+0x22>
 80002a4:	08000cdc 	.word	0x08000cdc
 80002a8:	08000cec 	.word	0x08000cec

080002ac <print>:




void print(char *p_format, ...)
{
 80002ac:	b40f      	push	{r0, r1, r2, r3}
 80002ae:	b580      	push	{r7, lr}
 80002b0:	b082      	sub	sp, #8
 80002b2:	af00      	add	r7, sp, #0
	va_list p_variables;
	va_start(p_variables, p_format);
 80002b4:	f107 0314 	add.w	r3, r7, #20
 80002b8:	607b      	str	r3, [r7, #4]
	(void)vsprintf(A_Buffer, p_format, p_variables);
 80002ba:	687a      	ldr	r2, [r7, #4]
 80002bc:	6939      	ldr	r1, [r7, #16]
 80002be:	4806      	ldr	r0, [pc, #24]	; (80002d8 <print+0x2c>)
 80002c0:	f000 f8da 	bl	8000478 <vsiprintf>
    USART2_print(A_Buffer);
 80002c4:	4804      	ldr	r0, [pc, #16]	; (80002d8 <print+0x2c>)
 80002c6:	f000 f851 	bl	800036c <USART2_print>
}
 80002ca:	bf00      	nop
 80002cc:	3708      	adds	r7, #8
 80002ce:	46bd      	mov	sp, r7
 80002d0:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80002d4:	b004      	add	sp, #16
 80002d6:	4770      	bx	lr
 80002d8:	20000080 	.word	0x20000080

080002dc <USART2_init>:




void USART2_init(void)
{
 80002dc:	b480      	push	{r7}
 80002de:	af00      	add	r7, sp, #0
    // Enable GPIOA clock (p. 148 in the datasheet).
    RCC->AHBENR |= 0x00020000;
 80002e0:	4b13      	ldr	r3, [pc, #76]	; (8000330 <USART2_init+0x54>)
 80002e2:	695b      	ldr	r3, [r3, #20]
 80002e4:	4a12      	ldr	r2, [pc, #72]	; (8000330 <USART2_init+0x54>)
 80002e6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80002ea:	6153      	str	r3, [r2, #20]
    // Enable USART2 clock.
    RCC->APB1ENR |= 0x00020000;
 80002ec:	4b10      	ldr	r3, [pc, #64]	; (8000330 <USART2_init+0x54>)
 80002ee:	69db      	ldr	r3, [r3, #28]
 80002f0:	4a0f      	ldr	r2, [pc, #60]	; (8000330 <USART2_init+0x54>)
 80002f2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80002f6:	61d3      	str	r3, [r2, #28]
    // Configure GPIOA pins 2 and 3 as alternate function 7, which is USART2.
    GPIOA->MODER |= 0x000000A0;
 80002f8:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80002fc:	681b      	ldr	r3, [r3, #0]
 80002fe:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 8000302:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 8000306:	6013      	str	r3, [r2, #0]
    GPIOA->AFR[0] |= 0x00007700;
 8000308:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 800030c:	6a1b      	ldr	r3, [r3, #32]
 800030e:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 8000312:	f443 43ee 	orr.w	r3, r3, #30464	; 0x7700
 8000316:	6213      	str	r3, [r2, #32]
    USART2->BRR = 833;  // 8 MHz / 9600 baud rate.
 8000318:	4b06      	ldr	r3, [pc, #24]	; (8000334 <USART2_init+0x58>)
 800031a:	f240 3241 	movw	r2, #833	; 0x341
 800031e:	60da      	str	r2, [r3, #12]
    // Enable USART2 and its TX functionality.
    USART2->CR1 = 0x00000009;
 8000320:	4b04      	ldr	r3, [pc, #16]	; (8000334 <USART2_init+0x58>)
 8000322:	2209      	movs	r2, #9
 8000324:	601a      	str	r2, [r3, #0]
}
 8000326:	bf00      	nop
 8000328:	46bd      	mov	sp, r7
 800032a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800032e:	4770      	bx	lr
 8000330:	40021000 	.word	0x40021000
 8000334:	40004400 	.word	0x40004400

08000338 <USART2_printCharacter>:




void USART2_printCharacter(char c)
{
 8000338:	b480      	push	{r7}
 800033a:	b083      	sub	sp, #12
 800033c:	af00      	add	r7, sp, #0
 800033e:	4603      	mov	r3, r0
 8000340:	71fb      	strb	r3, [r7, #7]
    USART2->TDR = c;
 8000342:	4b09      	ldr	r3, [pc, #36]	; (8000368 <USART2_printCharacter+0x30>)
 8000344:	79fa      	ldrb	r2, [r7, #7]
 8000346:	b292      	uxth	r2, r2
 8000348:	851a      	strh	r2, [r3, #40]	; 0x28
    while(!(USART2->ISR & 0x00000080));
 800034a:	bf00      	nop
 800034c:	4b06      	ldr	r3, [pc, #24]	; (8000368 <USART2_printCharacter+0x30>)
 800034e:	69db      	ldr	r3, [r3, #28]
 8000350:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000354:	2b00      	cmp	r3, #0
 8000356:	d0f9      	beq.n	800034c <USART2_printCharacter+0x14>
}
 8000358:	bf00      	nop
 800035a:	bf00      	nop
 800035c:	370c      	adds	r7, #12
 800035e:	46bd      	mov	sp, r7
 8000360:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000364:	4770      	bx	lr
 8000366:	bf00      	nop
 8000368:	40004400 	.word	0x40004400

0800036c <USART2_print>:




void USART2_print(const char *p_data)
{
 800036c:	b480      	push	{r7}
 800036e:	b083      	sub	sp, #12
 8000370:	af00      	add	r7, sp, #0
 8000372:	6078      	str	r0, [r7, #4]
	while(*p_data != '\0')
 8000374:	e00e      	b.n	8000394 <USART2_print+0x28>
	{
		USART2->TDR = *p_data;
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	781a      	ldrb	r2, [r3, #0]
 800037a:	4b0c      	ldr	r3, [pc, #48]	; (80003ac <USART2_print+0x40>)
 800037c:	b292      	uxth	r2, r2
 800037e:	851a      	strh	r2, [r3, #40]	; 0x28
        p_data++;
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	3301      	adds	r3, #1
 8000384:	607b      	str	r3, [r7, #4]
        while(!(USART2->ISR & 0x00000080));
 8000386:	bf00      	nop
 8000388:	4b08      	ldr	r3, [pc, #32]	; (80003ac <USART2_print+0x40>)
 800038a:	69db      	ldr	r3, [r3, #28]
 800038c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000390:	2b00      	cmp	r3, #0
 8000392:	d0f9      	beq.n	8000388 <USART2_print+0x1c>
	while(*p_data != '\0')
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	781b      	ldrb	r3, [r3, #0]
 8000398:	2b00      	cmp	r3, #0
 800039a:	d1ec      	bne.n	8000376 <USART2_print+0xa>
	}
}
 800039c:	bf00      	nop
 800039e:	bf00      	nop
 80003a0:	370c      	adds	r7, #12
 80003a2:	46bd      	mov	sp, r7
 80003a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003a8:	4770      	bx	lr
 80003aa:	bf00      	nop
 80003ac:	40004400 	.word	0x40004400

080003b0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003b0:	480d      	ldr	r0, [pc, #52]	; (80003e8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003b2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80003b4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003b8:	480c      	ldr	r0, [pc, #48]	; (80003ec <LoopForever+0x6>)
  ldr r1, =_edata
 80003ba:	490d      	ldr	r1, [pc, #52]	; (80003f0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003bc:	4a0d      	ldr	r2, [pc, #52]	; (80003f4 <LoopForever+0xe>)
  movs r3, #0
 80003be:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003c0:	e002      	b.n	80003c8 <LoopCopyDataInit>

080003c2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003c2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003c4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003c6:	3304      	adds	r3, #4

080003c8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003c8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003ca:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003cc:	d3f9      	bcc.n	80003c2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003ce:	4a0a      	ldr	r2, [pc, #40]	; (80003f8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003d0:	4c0a      	ldr	r4, [pc, #40]	; (80003fc <LoopForever+0x16>)
  movs r3, #0
 80003d2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003d4:	e001      	b.n	80003da <LoopFillZerobss>

080003d6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003d6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003d8:	3204      	adds	r2, #4

080003da <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003da:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003dc:	d3fb      	bcc.n	80003d6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003de:	f000 f811 	bl	8000404 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003e2:	f7ff ff4d 	bl	8000280 <main>

080003e6 <LoopForever>:

LoopForever:
    b LoopForever
 80003e6:	e7fe      	b.n	80003e6 <LoopForever>
  ldr   r0, =_estack
 80003e8:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 80003ec:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003f0:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80003f4:	08000d4c 	.word	0x08000d4c
  ldr r2, =_sbss
 80003f8:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80003fc:	2000011c 	.word	0x2000011c

08000400 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000400:	e7fe      	b.n	8000400 <ADC1_2_IRQHandler>
	...

08000404 <__libc_init_array>:
 8000404:	b570      	push	{r4, r5, r6, lr}
 8000406:	4d0d      	ldr	r5, [pc, #52]	; (800043c <__libc_init_array+0x38>)
 8000408:	4c0d      	ldr	r4, [pc, #52]	; (8000440 <__libc_init_array+0x3c>)
 800040a:	1b64      	subs	r4, r4, r5
 800040c:	10a4      	asrs	r4, r4, #2
 800040e:	2600      	movs	r6, #0
 8000410:	42a6      	cmp	r6, r4
 8000412:	d109      	bne.n	8000428 <__libc_init_array+0x24>
 8000414:	4d0b      	ldr	r5, [pc, #44]	; (8000444 <__libc_init_array+0x40>)
 8000416:	4c0c      	ldr	r4, [pc, #48]	; (8000448 <__libc_init_array+0x44>)
 8000418:	f000 fc54 	bl	8000cc4 <_init>
 800041c:	1b64      	subs	r4, r4, r5
 800041e:	10a4      	asrs	r4, r4, #2
 8000420:	2600      	movs	r6, #0
 8000422:	42a6      	cmp	r6, r4
 8000424:	d105      	bne.n	8000432 <__libc_init_array+0x2e>
 8000426:	bd70      	pop	{r4, r5, r6, pc}
 8000428:	f855 3b04 	ldr.w	r3, [r5], #4
 800042c:	4798      	blx	r3
 800042e:	3601      	adds	r6, #1
 8000430:	e7ee      	b.n	8000410 <__libc_init_array+0xc>
 8000432:	f855 3b04 	ldr.w	r3, [r5], #4
 8000436:	4798      	blx	r3
 8000438:	3601      	adds	r6, #1
 800043a:	e7f2      	b.n	8000422 <__libc_init_array+0x1e>
 800043c:	08000d44 	.word	0x08000d44
 8000440:	08000d44 	.word	0x08000d44
 8000444:	08000d44 	.word	0x08000d44
 8000448:	08000d48 	.word	0x08000d48

0800044c <_vsiprintf_r>:
 800044c:	b500      	push	{lr}
 800044e:	b09b      	sub	sp, #108	; 0x6c
 8000450:	9100      	str	r1, [sp, #0]
 8000452:	9104      	str	r1, [sp, #16]
 8000454:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8000458:	9105      	str	r1, [sp, #20]
 800045a:	9102      	str	r1, [sp, #8]
 800045c:	4905      	ldr	r1, [pc, #20]	; (8000474 <_vsiprintf_r+0x28>)
 800045e:	9103      	str	r1, [sp, #12]
 8000460:	4669      	mov	r1, sp
 8000462:	f000 f86f 	bl	8000544 <_svfiprintf_r>
 8000466:	9b00      	ldr	r3, [sp, #0]
 8000468:	2200      	movs	r2, #0
 800046a:	701a      	strb	r2, [r3, #0]
 800046c:	b01b      	add	sp, #108	; 0x6c
 800046e:	f85d fb04 	ldr.w	pc, [sp], #4
 8000472:	bf00      	nop
 8000474:	ffff0208 	.word	0xffff0208

08000478 <vsiprintf>:
 8000478:	4613      	mov	r3, r2
 800047a:	460a      	mov	r2, r1
 800047c:	4601      	mov	r1, r0
 800047e:	4802      	ldr	r0, [pc, #8]	; (8000488 <vsiprintf+0x10>)
 8000480:	6800      	ldr	r0, [r0, #0]
 8000482:	f7ff bfe3 	b.w	800044c <_vsiprintf_r>
 8000486:	bf00      	nop
 8000488:	20000000 	.word	0x20000000

0800048c <__ssputs_r>:
 800048c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000490:	688e      	ldr	r6, [r1, #8]
 8000492:	429e      	cmp	r6, r3
 8000494:	4682      	mov	sl, r0
 8000496:	460c      	mov	r4, r1
 8000498:	4690      	mov	r8, r2
 800049a:	461f      	mov	r7, r3
 800049c:	d838      	bhi.n	8000510 <__ssputs_r+0x84>
 800049e:	898a      	ldrh	r2, [r1, #12]
 80004a0:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80004a4:	d032      	beq.n	800050c <__ssputs_r+0x80>
 80004a6:	6825      	ldr	r5, [r4, #0]
 80004a8:	6909      	ldr	r1, [r1, #16]
 80004aa:	eba5 0901 	sub.w	r9, r5, r1
 80004ae:	6965      	ldr	r5, [r4, #20]
 80004b0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80004b4:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80004b8:	3301      	adds	r3, #1
 80004ba:	444b      	add	r3, r9
 80004bc:	106d      	asrs	r5, r5, #1
 80004be:	429d      	cmp	r5, r3
 80004c0:	bf38      	it	cc
 80004c2:	461d      	movcc	r5, r3
 80004c4:	0553      	lsls	r3, r2, #21
 80004c6:	d531      	bpl.n	800052c <__ssputs_r+0xa0>
 80004c8:	4629      	mov	r1, r5
 80004ca:	f000 fb47 	bl	8000b5c <_malloc_r>
 80004ce:	4606      	mov	r6, r0
 80004d0:	b950      	cbnz	r0, 80004e8 <__ssputs_r+0x5c>
 80004d2:	230c      	movs	r3, #12
 80004d4:	f8ca 3000 	str.w	r3, [sl]
 80004d8:	89a3      	ldrh	r3, [r4, #12]
 80004da:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80004de:	81a3      	strh	r3, [r4, #12]
 80004e0:	f04f 30ff 	mov.w	r0, #4294967295
 80004e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004e8:	6921      	ldr	r1, [r4, #16]
 80004ea:	464a      	mov	r2, r9
 80004ec:	f000 fabe 	bl	8000a6c <memcpy>
 80004f0:	89a3      	ldrh	r3, [r4, #12]
 80004f2:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80004f6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80004fa:	81a3      	strh	r3, [r4, #12]
 80004fc:	6126      	str	r6, [r4, #16]
 80004fe:	6165      	str	r5, [r4, #20]
 8000500:	444e      	add	r6, r9
 8000502:	eba5 0509 	sub.w	r5, r5, r9
 8000506:	6026      	str	r6, [r4, #0]
 8000508:	60a5      	str	r5, [r4, #8]
 800050a:	463e      	mov	r6, r7
 800050c:	42be      	cmp	r6, r7
 800050e:	d900      	bls.n	8000512 <__ssputs_r+0x86>
 8000510:	463e      	mov	r6, r7
 8000512:	4632      	mov	r2, r6
 8000514:	6820      	ldr	r0, [r4, #0]
 8000516:	4641      	mov	r1, r8
 8000518:	f000 fab6 	bl	8000a88 <memmove>
 800051c:	68a3      	ldr	r3, [r4, #8]
 800051e:	6822      	ldr	r2, [r4, #0]
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	4432      	add	r2, r6
 8000524:	60a3      	str	r3, [r4, #8]
 8000526:	6022      	str	r2, [r4, #0]
 8000528:	2000      	movs	r0, #0
 800052a:	e7db      	b.n	80004e4 <__ssputs_r+0x58>
 800052c:	462a      	mov	r2, r5
 800052e:	f000 fb6f 	bl	8000c10 <_realloc_r>
 8000532:	4606      	mov	r6, r0
 8000534:	2800      	cmp	r0, #0
 8000536:	d1e1      	bne.n	80004fc <__ssputs_r+0x70>
 8000538:	6921      	ldr	r1, [r4, #16]
 800053a:	4650      	mov	r0, sl
 800053c:	f000 fabe 	bl	8000abc <_free_r>
 8000540:	e7c7      	b.n	80004d2 <__ssputs_r+0x46>
	...

08000544 <_svfiprintf_r>:
 8000544:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000548:	4698      	mov	r8, r3
 800054a:	898b      	ldrh	r3, [r1, #12]
 800054c:	061b      	lsls	r3, r3, #24
 800054e:	b09d      	sub	sp, #116	; 0x74
 8000550:	4607      	mov	r7, r0
 8000552:	460d      	mov	r5, r1
 8000554:	4614      	mov	r4, r2
 8000556:	d50e      	bpl.n	8000576 <_svfiprintf_r+0x32>
 8000558:	690b      	ldr	r3, [r1, #16]
 800055a:	b963      	cbnz	r3, 8000576 <_svfiprintf_r+0x32>
 800055c:	2140      	movs	r1, #64	; 0x40
 800055e:	f000 fafd 	bl	8000b5c <_malloc_r>
 8000562:	6028      	str	r0, [r5, #0]
 8000564:	6128      	str	r0, [r5, #16]
 8000566:	b920      	cbnz	r0, 8000572 <_svfiprintf_r+0x2e>
 8000568:	230c      	movs	r3, #12
 800056a:	603b      	str	r3, [r7, #0]
 800056c:	f04f 30ff 	mov.w	r0, #4294967295
 8000570:	e0d1      	b.n	8000716 <_svfiprintf_r+0x1d2>
 8000572:	2340      	movs	r3, #64	; 0x40
 8000574:	616b      	str	r3, [r5, #20]
 8000576:	2300      	movs	r3, #0
 8000578:	9309      	str	r3, [sp, #36]	; 0x24
 800057a:	2320      	movs	r3, #32
 800057c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000580:	f8cd 800c 	str.w	r8, [sp, #12]
 8000584:	2330      	movs	r3, #48	; 0x30
 8000586:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 8000730 <_svfiprintf_r+0x1ec>
 800058a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800058e:	f04f 0901 	mov.w	r9, #1
 8000592:	4623      	mov	r3, r4
 8000594:	469a      	mov	sl, r3
 8000596:	f813 2b01 	ldrb.w	r2, [r3], #1
 800059a:	b10a      	cbz	r2, 80005a0 <_svfiprintf_r+0x5c>
 800059c:	2a25      	cmp	r2, #37	; 0x25
 800059e:	d1f9      	bne.n	8000594 <_svfiprintf_r+0x50>
 80005a0:	ebba 0b04 	subs.w	fp, sl, r4
 80005a4:	d00b      	beq.n	80005be <_svfiprintf_r+0x7a>
 80005a6:	465b      	mov	r3, fp
 80005a8:	4622      	mov	r2, r4
 80005aa:	4629      	mov	r1, r5
 80005ac:	4638      	mov	r0, r7
 80005ae:	f7ff ff6d 	bl	800048c <__ssputs_r>
 80005b2:	3001      	adds	r0, #1
 80005b4:	f000 80aa 	beq.w	800070c <_svfiprintf_r+0x1c8>
 80005b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80005ba:	445a      	add	r2, fp
 80005bc:	9209      	str	r2, [sp, #36]	; 0x24
 80005be:	f89a 3000 	ldrb.w	r3, [sl]
 80005c2:	2b00      	cmp	r3, #0
 80005c4:	f000 80a2 	beq.w	800070c <_svfiprintf_r+0x1c8>
 80005c8:	2300      	movs	r3, #0
 80005ca:	f04f 32ff 	mov.w	r2, #4294967295
 80005ce:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80005d2:	f10a 0a01 	add.w	sl, sl, #1
 80005d6:	9304      	str	r3, [sp, #16]
 80005d8:	9307      	str	r3, [sp, #28]
 80005da:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80005de:	931a      	str	r3, [sp, #104]	; 0x68
 80005e0:	4654      	mov	r4, sl
 80005e2:	2205      	movs	r2, #5
 80005e4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80005e8:	4851      	ldr	r0, [pc, #324]	; (8000730 <_svfiprintf_r+0x1ec>)
 80005ea:	f7ff fdf9 	bl	80001e0 <memchr>
 80005ee:	9a04      	ldr	r2, [sp, #16]
 80005f0:	b9d8      	cbnz	r0, 800062a <_svfiprintf_r+0xe6>
 80005f2:	06d0      	lsls	r0, r2, #27
 80005f4:	bf44      	itt	mi
 80005f6:	2320      	movmi	r3, #32
 80005f8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80005fc:	0711      	lsls	r1, r2, #28
 80005fe:	bf44      	itt	mi
 8000600:	232b      	movmi	r3, #43	; 0x2b
 8000602:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000606:	f89a 3000 	ldrb.w	r3, [sl]
 800060a:	2b2a      	cmp	r3, #42	; 0x2a
 800060c:	d015      	beq.n	800063a <_svfiprintf_r+0xf6>
 800060e:	9a07      	ldr	r2, [sp, #28]
 8000610:	4654      	mov	r4, sl
 8000612:	2000      	movs	r0, #0
 8000614:	f04f 0c0a 	mov.w	ip, #10
 8000618:	4621      	mov	r1, r4
 800061a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800061e:	3b30      	subs	r3, #48	; 0x30
 8000620:	2b09      	cmp	r3, #9
 8000622:	d94e      	bls.n	80006c2 <_svfiprintf_r+0x17e>
 8000624:	b1b0      	cbz	r0, 8000654 <_svfiprintf_r+0x110>
 8000626:	9207      	str	r2, [sp, #28]
 8000628:	e014      	b.n	8000654 <_svfiprintf_r+0x110>
 800062a:	eba0 0308 	sub.w	r3, r0, r8
 800062e:	fa09 f303 	lsl.w	r3, r9, r3
 8000632:	4313      	orrs	r3, r2
 8000634:	9304      	str	r3, [sp, #16]
 8000636:	46a2      	mov	sl, r4
 8000638:	e7d2      	b.n	80005e0 <_svfiprintf_r+0x9c>
 800063a:	9b03      	ldr	r3, [sp, #12]
 800063c:	1d19      	adds	r1, r3, #4
 800063e:	681b      	ldr	r3, [r3, #0]
 8000640:	9103      	str	r1, [sp, #12]
 8000642:	2b00      	cmp	r3, #0
 8000644:	bfbb      	ittet	lt
 8000646:	425b      	neglt	r3, r3
 8000648:	f042 0202 	orrlt.w	r2, r2, #2
 800064c:	9307      	strge	r3, [sp, #28]
 800064e:	9307      	strlt	r3, [sp, #28]
 8000650:	bfb8      	it	lt
 8000652:	9204      	strlt	r2, [sp, #16]
 8000654:	7823      	ldrb	r3, [r4, #0]
 8000656:	2b2e      	cmp	r3, #46	; 0x2e
 8000658:	d10c      	bne.n	8000674 <_svfiprintf_r+0x130>
 800065a:	7863      	ldrb	r3, [r4, #1]
 800065c:	2b2a      	cmp	r3, #42	; 0x2a
 800065e:	d135      	bne.n	80006cc <_svfiprintf_r+0x188>
 8000660:	9b03      	ldr	r3, [sp, #12]
 8000662:	1d1a      	adds	r2, r3, #4
 8000664:	681b      	ldr	r3, [r3, #0]
 8000666:	9203      	str	r2, [sp, #12]
 8000668:	2b00      	cmp	r3, #0
 800066a:	bfb8      	it	lt
 800066c:	f04f 33ff 	movlt.w	r3, #4294967295
 8000670:	3402      	adds	r4, #2
 8000672:	9305      	str	r3, [sp, #20]
 8000674:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8000740 <_svfiprintf_r+0x1fc>
 8000678:	7821      	ldrb	r1, [r4, #0]
 800067a:	2203      	movs	r2, #3
 800067c:	4650      	mov	r0, sl
 800067e:	f7ff fdaf 	bl	80001e0 <memchr>
 8000682:	b140      	cbz	r0, 8000696 <_svfiprintf_r+0x152>
 8000684:	2340      	movs	r3, #64	; 0x40
 8000686:	eba0 000a 	sub.w	r0, r0, sl
 800068a:	fa03 f000 	lsl.w	r0, r3, r0
 800068e:	9b04      	ldr	r3, [sp, #16]
 8000690:	4303      	orrs	r3, r0
 8000692:	3401      	adds	r4, #1
 8000694:	9304      	str	r3, [sp, #16]
 8000696:	f814 1b01 	ldrb.w	r1, [r4], #1
 800069a:	4826      	ldr	r0, [pc, #152]	; (8000734 <_svfiprintf_r+0x1f0>)
 800069c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80006a0:	2206      	movs	r2, #6
 80006a2:	f7ff fd9d 	bl	80001e0 <memchr>
 80006a6:	2800      	cmp	r0, #0
 80006a8:	d038      	beq.n	800071c <_svfiprintf_r+0x1d8>
 80006aa:	4b23      	ldr	r3, [pc, #140]	; (8000738 <_svfiprintf_r+0x1f4>)
 80006ac:	bb1b      	cbnz	r3, 80006f6 <_svfiprintf_r+0x1b2>
 80006ae:	9b03      	ldr	r3, [sp, #12]
 80006b0:	3307      	adds	r3, #7
 80006b2:	f023 0307 	bic.w	r3, r3, #7
 80006b6:	3308      	adds	r3, #8
 80006b8:	9303      	str	r3, [sp, #12]
 80006ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80006bc:	4433      	add	r3, r6
 80006be:	9309      	str	r3, [sp, #36]	; 0x24
 80006c0:	e767      	b.n	8000592 <_svfiprintf_r+0x4e>
 80006c2:	fb0c 3202 	mla	r2, ip, r2, r3
 80006c6:	460c      	mov	r4, r1
 80006c8:	2001      	movs	r0, #1
 80006ca:	e7a5      	b.n	8000618 <_svfiprintf_r+0xd4>
 80006cc:	2300      	movs	r3, #0
 80006ce:	3401      	adds	r4, #1
 80006d0:	9305      	str	r3, [sp, #20]
 80006d2:	4619      	mov	r1, r3
 80006d4:	f04f 0c0a 	mov.w	ip, #10
 80006d8:	4620      	mov	r0, r4
 80006da:	f810 2b01 	ldrb.w	r2, [r0], #1
 80006de:	3a30      	subs	r2, #48	; 0x30
 80006e0:	2a09      	cmp	r2, #9
 80006e2:	d903      	bls.n	80006ec <_svfiprintf_r+0x1a8>
 80006e4:	2b00      	cmp	r3, #0
 80006e6:	d0c5      	beq.n	8000674 <_svfiprintf_r+0x130>
 80006e8:	9105      	str	r1, [sp, #20]
 80006ea:	e7c3      	b.n	8000674 <_svfiprintf_r+0x130>
 80006ec:	fb0c 2101 	mla	r1, ip, r1, r2
 80006f0:	4604      	mov	r4, r0
 80006f2:	2301      	movs	r3, #1
 80006f4:	e7f0      	b.n	80006d8 <_svfiprintf_r+0x194>
 80006f6:	ab03      	add	r3, sp, #12
 80006f8:	9300      	str	r3, [sp, #0]
 80006fa:	462a      	mov	r2, r5
 80006fc:	4b0f      	ldr	r3, [pc, #60]	; (800073c <_svfiprintf_r+0x1f8>)
 80006fe:	a904      	add	r1, sp, #16
 8000700:	4638      	mov	r0, r7
 8000702:	f3af 8000 	nop.w
 8000706:	1c42      	adds	r2, r0, #1
 8000708:	4606      	mov	r6, r0
 800070a:	d1d6      	bne.n	80006ba <_svfiprintf_r+0x176>
 800070c:	89ab      	ldrh	r3, [r5, #12]
 800070e:	065b      	lsls	r3, r3, #25
 8000710:	f53f af2c 	bmi.w	800056c <_svfiprintf_r+0x28>
 8000714:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000716:	b01d      	add	sp, #116	; 0x74
 8000718:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800071c:	ab03      	add	r3, sp, #12
 800071e:	9300      	str	r3, [sp, #0]
 8000720:	462a      	mov	r2, r5
 8000722:	4b06      	ldr	r3, [pc, #24]	; (800073c <_svfiprintf_r+0x1f8>)
 8000724:	a904      	add	r1, sp, #16
 8000726:	4638      	mov	r0, r7
 8000728:	f000 f87a 	bl	8000820 <_printf_i>
 800072c:	e7eb      	b.n	8000706 <_svfiprintf_r+0x1c2>
 800072e:	bf00      	nop
 8000730:	08000d0e 	.word	0x08000d0e
 8000734:	08000d18 	.word	0x08000d18
 8000738:	00000000 	.word	0x00000000
 800073c:	0800048d 	.word	0x0800048d
 8000740:	08000d14 	.word	0x08000d14

08000744 <_printf_common>:
 8000744:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000748:	4616      	mov	r6, r2
 800074a:	4699      	mov	r9, r3
 800074c:	688a      	ldr	r2, [r1, #8]
 800074e:	690b      	ldr	r3, [r1, #16]
 8000750:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000754:	4293      	cmp	r3, r2
 8000756:	bfb8      	it	lt
 8000758:	4613      	movlt	r3, r2
 800075a:	6033      	str	r3, [r6, #0]
 800075c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000760:	4607      	mov	r7, r0
 8000762:	460c      	mov	r4, r1
 8000764:	b10a      	cbz	r2, 800076a <_printf_common+0x26>
 8000766:	3301      	adds	r3, #1
 8000768:	6033      	str	r3, [r6, #0]
 800076a:	6823      	ldr	r3, [r4, #0]
 800076c:	0699      	lsls	r1, r3, #26
 800076e:	bf42      	ittt	mi
 8000770:	6833      	ldrmi	r3, [r6, #0]
 8000772:	3302      	addmi	r3, #2
 8000774:	6033      	strmi	r3, [r6, #0]
 8000776:	6825      	ldr	r5, [r4, #0]
 8000778:	f015 0506 	ands.w	r5, r5, #6
 800077c:	d106      	bne.n	800078c <_printf_common+0x48>
 800077e:	f104 0a19 	add.w	sl, r4, #25
 8000782:	68e3      	ldr	r3, [r4, #12]
 8000784:	6832      	ldr	r2, [r6, #0]
 8000786:	1a9b      	subs	r3, r3, r2
 8000788:	42ab      	cmp	r3, r5
 800078a:	dc26      	bgt.n	80007da <_printf_common+0x96>
 800078c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000790:	1e13      	subs	r3, r2, #0
 8000792:	6822      	ldr	r2, [r4, #0]
 8000794:	bf18      	it	ne
 8000796:	2301      	movne	r3, #1
 8000798:	0692      	lsls	r2, r2, #26
 800079a:	d42b      	bmi.n	80007f4 <_printf_common+0xb0>
 800079c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80007a0:	4649      	mov	r1, r9
 80007a2:	4638      	mov	r0, r7
 80007a4:	47c0      	blx	r8
 80007a6:	3001      	adds	r0, #1
 80007a8:	d01e      	beq.n	80007e8 <_printf_common+0xa4>
 80007aa:	6823      	ldr	r3, [r4, #0]
 80007ac:	68e5      	ldr	r5, [r4, #12]
 80007ae:	6832      	ldr	r2, [r6, #0]
 80007b0:	f003 0306 	and.w	r3, r3, #6
 80007b4:	2b04      	cmp	r3, #4
 80007b6:	bf08      	it	eq
 80007b8:	1aad      	subeq	r5, r5, r2
 80007ba:	68a3      	ldr	r3, [r4, #8]
 80007bc:	6922      	ldr	r2, [r4, #16]
 80007be:	bf0c      	ite	eq
 80007c0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80007c4:	2500      	movne	r5, #0
 80007c6:	4293      	cmp	r3, r2
 80007c8:	bfc4      	itt	gt
 80007ca:	1a9b      	subgt	r3, r3, r2
 80007cc:	18ed      	addgt	r5, r5, r3
 80007ce:	2600      	movs	r6, #0
 80007d0:	341a      	adds	r4, #26
 80007d2:	42b5      	cmp	r5, r6
 80007d4:	d11a      	bne.n	800080c <_printf_common+0xc8>
 80007d6:	2000      	movs	r0, #0
 80007d8:	e008      	b.n	80007ec <_printf_common+0xa8>
 80007da:	2301      	movs	r3, #1
 80007dc:	4652      	mov	r2, sl
 80007de:	4649      	mov	r1, r9
 80007e0:	4638      	mov	r0, r7
 80007e2:	47c0      	blx	r8
 80007e4:	3001      	adds	r0, #1
 80007e6:	d103      	bne.n	80007f0 <_printf_common+0xac>
 80007e8:	f04f 30ff 	mov.w	r0, #4294967295
 80007ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80007f0:	3501      	adds	r5, #1
 80007f2:	e7c6      	b.n	8000782 <_printf_common+0x3e>
 80007f4:	18e1      	adds	r1, r4, r3
 80007f6:	1c5a      	adds	r2, r3, #1
 80007f8:	2030      	movs	r0, #48	; 0x30
 80007fa:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80007fe:	4422      	add	r2, r4
 8000800:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000804:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000808:	3302      	adds	r3, #2
 800080a:	e7c7      	b.n	800079c <_printf_common+0x58>
 800080c:	2301      	movs	r3, #1
 800080e:	4622      	mov	r2, r4
 8000810:	4649      	mov	r1, r9
 8000812:	4638      	mov	r0, r7
 8000814:	47c0      	blx	r8
 8000816:	3001      	adds	r0, #1
 8000818:	d0e6      	beq.n	80007e8 <_printf_common+0xa4>
 800081a:	3601      	adds	r6, #1
 800081c:	e7d9      	b.n	80007d2 <_printf_common+0x8e>
	...

08000820 <_printf_i>:
 8000820:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000824:	460c      	mov	r4, r1
 8000826:	4691      	mov	r9, r2
 8000828:	7e27      	ldrb	r7, [r4, #24]
 800082a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800082c:	2f78      	cmp	r7, #120	; 0x78
 800082e:	4680      	mov	r8, r0
 8000830:	469a      	mov	sl, r3
 8000832:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000836:	d807      	bhi.n	8000848 <_printf_i+0x28>
 8000838:	2f62      	cmp	r7, #98	; 0x62
 800083a:	d80a      	bhi.n	8000852 <_printf_i+0x32>
 800083c:	2f00      	cmp	r7, #0
 800083e:	f000 80d8 	beq.w	80009f2 <_printf_i+0x1d2>
 8000842:	2f58      	cmp	r7, #88	; 0x58
 8000844:	f000 80a3 	beq.w	800098e <_printf_i+0x16e>
 8000848:	f104 0642 	add.w	r6, r4, #66	; 0x42
 800084c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000850:	e03a      	b.n	80008c8 <_printf_i+0xa8>
 8000852:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000856:	2b15      	cmp	r3, #21
 8000858:	d8f6      	bhi.n	8000848 <_printf_i+0x28>
 800085a:	a001      	add	r0, pc, #4	; (adr r0, 8000860 <_printf_i+0x40>)
 800085c:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000860:	080008b9 	.word	0x080008b9
 8000864:	080008cd 	.word	0x080008cd
 8000868:	08000849 	.word	0x08000849
 800086c:	08000849 	.word	0x08000849
 8000870:	08000849 	.word	0x08000849
 8000874:	08000849 	.word	0x08000849
 8000878:	080008cd 	.word	0x080008cd
 800087c:	08000849 	.word	0x08000849
 8000880:	08000849 	.word	0x08000849
 8000884:	08000849 	.word	0x08000849
 8000888:	08000849 	.word	0x08000849
 800088c:	080009d9 	.word	0x080009d9
 8000890:	080008fd 	.word	0x080008fd
 8000894:	080009bb 	.word	0x080009bb
 8000898:	08000849 	.word	0x08000849
 800089c:	08000849 	.word	0x08000849
 80008a0:	080009fb 	.word	0x080009fb
 80008a4:	08000849 	.word	0x08000849
 80008a8:	080008fd 	.word	0x080008fd
 80008ac:	08000849 	.word	0x08000849
 80008b0:	08000849 	.word	0x08000849
 80008b4:	080009c3 	.word	0x080009c3
 80008b8:	680b      	ldr	r3, [r1, #0]
 80008ba:	1d1a      	adds	r2, r3, #4
 80008bc:	681b      	ldr	r3, [r3, #0]
 80008be:	600a      	str	r2, [r1, #0]
 80008c0:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80008c4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80008c8:	2301      	movs	r3, #1
 80008ca:	e0a3      	b.n	8000a14 <_printf_i+0x1f4>
 80008cc:	6825      	ldr	r5, [r4, #0]
 80008ce:	6808      	ldr	r0, [r1, #0]
 80008d0:	062e      	lsls	r6, r5, #24
 80008d2:	f100 0304 	add.w	r3, r0, #4
 80008d6:	d50a      	bpl.n	80008ee <_printf_i+0xce>
 80008d8:	6805      	ldr	r5, [r0, #0]
 80008da:	600b      	str	r3, [r1, #0]
 80008dc:	2d00      	cmp	r5, #0
 80008de:	da03      	bge.n	80008e8 <_printf_i+0xc8>
 80008e0:	232d      	movs	r3, #45	; 0x2d
 80008e2:	426d      	negs	r5, r5
 80008e4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80008e8:	485e      	ldr	r0, [pc, #376]	; (8000a64 <_printf_i+0x244>)
 80008ea:	230a      	movs	r3, #10
 80008ec:	e019      	b.n	8000922 <_printf_i+0x102>
 80008ee:	f015 0f40 	tst.w	r5, #64	; 0x40
 80008f2:	6805      	ldr	r5, [r0, #0]
 80008f4:	600b      	str	r3, [r1, #0]
 80008f6:	bf18      	it	ne
 80008f8:	b22d      	sxthne	r5, r5
 80008fa:	e7ef      	b.n	80008dc <_printf_i+0xbc>
 80008fc:	680b      	ldr	r3, [r1, #0]
 80008fe:	6825      	ldr	r5, [r4, #0]
 8000900:	1d18      	adds	r0, r3, #4
 8000902:	6008      	str	r0, [r1, #0]
 8000904:	0628      	lsls	r0, r5, #24
 8000906:	d501      	bpl.n	800090c <_printf_i+0xec>
 8000908:	681d      	ldr	r5, [r3, #0]
 800090a:	e002      	b.n	8000912 <_printf_i+0xf2>
 800090c:	0669      	lsls	r1, r5, #25
 800090e:	d5fb      	bpl.n	8000908 <_printf_i+0xe8>
 8000910:	881d      	ldrh	r5, [r3, #0]
 8000912:	4854      	ldr	r0, [pc, #336]	; (8000a64 <_printf_i+0x244>)
 8000914:	2f6f      	cmp	r7, #111	; 0x6f
 8000916:	bf0c      	ite	eq
 8000918:	2308      	moveq	r3, #8
 800091a:	230a      	movne	r3, #10
 800091c:	2100      	movs	r1, #0
 800091e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000922:	6866      	ldr	r6, [r4, #4]
 8000924:	60a6      	str	r6, [r4, #8]
 8000926:	2e00      	cmp	r6, #0
 8000928:	bfa2      	ittt	ge
 800092a:	6821      	ldrge	r1, [r4, #0]
 800092c:	f021 0104 	bicge.w	r1, r1, #4
 8000930:	6021      	strge	r1, [r4, #0]
 8000932:	b90d      	cbnz	r5, 8000938 <_printf_i+0x118>
 8000934:	2e00      	cmp	r6, #0
 8000936:	d04d      	beq.n	80009d4 <_printf_i+0x1b4>
 8000938:	4616      	mov	r6, r2
 800093a:	fbb5 f1f3 	udiv	r1, r5, r3
 800093e:	fb03 5711 	mls	r7, r3, r1, r5
 8000942:	5dc7      	ldrb	r7, [r0, r7]
 8000944:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000948:	462f      	mov	r7, r5
 800094a:	42bb      	cmp	r3, r7
 800094c:	460d      	mov	r5, r1
 800094e:	d9f4      	bls.n	800093a <_printf_i+0x11a>
 8000950:	2b08      	cmp	r3, #8
 8000952:	d10b      	bne.n	800096c <_printf_i+0x14c>
 8000954:	6823      	ldr	r3, [r4, #0]
 8000956:	07df      	lsls	r7, r3, #31
 8000958:	d508      	bpl.n	800096c <_printf_i+0x14c>
 800095a:	6923      	ldr	r3, [r4, #16]
 800095c:	6861      	ldr	r1, [r4, #4]
 800095e:	4299      	cmp	r1, r3
 8000960:	bfde      	ittt	le
 8000962:	2330      	movle	r3, #48	; 0x30
 8000964:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000968:	f106 36ff 	addle.w	r6, r6, #4294967295
 800096c:	1b92      	subs	r2, r2, r6
 800096e:	6122      	str	r2, [r4, #16]
 8000970:	f8cd a000 	str.w	sl, [sp]
 8000974:	464b      	mov	r3, r9
 8000976:	aa03      	add	r2, sp, #12
 8000978:	4621      	mov	r1, r4
 800097a:	4640      	mov	r0, r8
 800097c:	f7ff fee2 	bl	8000744 <_printf_common>
 8000980:	3001      	adds	r0, #1
 8000982:	d14c      	bne.n	8000a1e <_printf_i+0x1fe>
 8000984:	f04f 30ff 	mov.w	r0, #4294967295
 8000988:	b004      	add	sp, #16
 800098a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800098e:	4835      	ldr	r0, [pc, #212]	; (8000a64 <_printf_i+0x244>)
 8000990:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000994:	6823      	ldr	r3, [r4, #0]
 8000996:	680e      	ldr	r6, [r1, #0]
 8000998:	061f      	lsls	r7, r3, #24
 800099a:	f856 5b04 	ldr.w	r5, [r6], #4
 800099e:	600e      	str	r6, [r1, #0]
 80009a0:	d514      	bpl.n	80009cc <_printf_i+0x1ac>
 80009a2:	07d9      	lsls	r1, r3, #31
 80009a4:	bf44      	itt	mi
 80009a6:	f043 0320 	orrmi.w	r3, r3, #32
 80009aa:	6023      	strmi	r3, [r4, #0]
 80009ac:	b91d      	cbnz	r5, 80009b6 <_printf_i+0x196>
 80009ae:	6823      	ldr	r3, [r4, #0]
 80009b0:	f023 0320 	bic.w	r3, r3, #32
 80009b4:	6023      	str	r3, [r4, #0]
 80009b6:	2310      	movs	r3, #16
 80009b8:	e7b0      	b.n	800091c <_printf_i+0xfc>
 80009ba:	6823      	ldr	r3, [r4, #0]
 80009bc:	f043 0320 	orr.w	r3, r3, #32
 80009c0:	6023      	str	r3, [r4, #0]
 80009c2:	2378      	movs	r3, #120	; 0x78
 80009c4:	4828      	ldr	r0, [pc, #160]	; (8000a68 <_printf_i+0x248>)
 80009c6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80009ca:	e7e3      	b.n	8000994 <_printf_i+0x174>
 80009cc:	065e      	lsls	r6, r3, #25
 80009ce:	bf48      	it	mi
 80009d0:	b2ad      	uxthmi	r5, r5
 80009d2:	e7e6      	b.n	80009a2 <_printf_i+0x182>
 80009d4:	4616      	mov	r6, r2
 80009d6:	e7bb      	b.n	8000950 <_printf_i+0x130>
 80009d8:	680b      	ldr	r3, [r1, #0]
 80009da:	6826      	ldr	r6, [r4, #0]
 80009dc:	6960      	ldr	r0, [r4, #20]
 80009de:	1d1d      	adds	r5, r3, #4
 80009e0:	600d      	str	r5, [r1, #0]
 80009e2:	0635      	lsls	r5, r6, #24
 80009e4:	681b      	ldr	r3, [r3, #0]
 80009e6:	d501      	bpl.n	80009ec <_printf_i+0x1cc>
 80009e8:	6018      	str	r0, [r3, #0]
 80009ea:	e002      	b.n	80009f2 <_printf_i+0x1d2>
 80009ec:	0671      	lsls	r1, r6, #25
 80009ee:	d5fb      	bpl.n	80009e8 <_printf_i+0x1c8>
 80009f0:	8018      	strh	r0, [r3, #0]
 80009f2:	2300      	movs	r3, #0
 80009f4:	6123      	str	r3, [r4, #16]
 80009f6:	4616      	mov	r6, r2
 80009f8:	e7ba      	b.n	8000970 <_printf_i+0x150>
 80009fa:	680b      	ldr	r3, [r1, #0]
 80009fc:	1d1a      	adds	r2, r3, #4
 80009fe:	600a      	str	r2, [r1, #0]
 8000a00:	681e      	ldr	r6, [r3, #0]
 8000a02:	6862      	ldr	r2, [r4, #4]
 8000a04:	2100      	movs	r1, #0
 8000a06:	4630      	mov	r0, r6
 8000a08:	f7ff fbea 	bl	80001e0 <memchr>
 8000a0c:	b108      	cbz	r0, 8000a12 <_printf_i+0x1f2>
 8000a0e:	1b80      	subs	r0, r0, r6
 8000a10:	6060      	str	r0, [r4, #4]
 8000a12:	6863      	ldr	r3, [r4, #4]
 8000a14:	6123      	str	r3, [r4, #16]
 8000a16:	2300      	movs	r3, #0
 8000a18:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000a1c:	e7a8      	b.n	8000970 <_printf_i+0x150>
 8000a1e:	6923      	ldr	r3, [r4, #16]
 8000a20:	4632      	mov	r2, r6
 8000a22:	4649      	mov	r1, r9
 8000a24:	4640      	mov	r0, r8
 8000a26:	47d0      	blx	sl
 8000a28:	3001      	adds	r0, #1
 8000a2a:	d0ab      	beq.n	8000984 <_printf_i+0x164>
 8000a2c:	6823      	ldr	r3, [r4, #0]
 8000a2e:	079b      	lsls	r3, r3, #30
 8000a30:	d413      	bmi.n	8000a5a <_printf_i+0x23a>
 8000a32:	68e0      	ldr	r0, [r4, #12]
 8000a34:	9b03      	ldr	r3, [sp, #12]
 8000a36:	4298      	cmp	r0, r3
 8000a38:	bfb8      	it	lt
 8000a3a:	4618      	movlt	r0, r3
 8000a3c:	e7a4      	b.n	8000988 <_printf_i+0x168>
 8000a3e:	2301      	movs	r3, #1
 8000a40:	4632      	mov	r2, r6
 8000a42:	4649      	mov	r1, r9
 8000a44:	4640      	mov	r0, r8
 8000a46:	47d0      	blx	sl
 8000a48:	3001      	adds	r0, #1
 8000a4a:	d09b      	beq.n	8000984 <_printf_i+0x164>
 8000a4c:	3501      	adds	r5, #1
 8000a4e:	68e3      	ldr	r3, [r4, #12]
 8000a50:	9903      	ldr	r1, [sp, #12]
 8000a52:	1a5b      	subs	r3, r3, r1
 8000a54:	42ab      	cmp	r3, r5
 8000a56:	dcf2      	bgt.n	8000a3e <_printf_i+0x21e>
 8000a58:	e7eb      	b.n	8000a32 <_printf_i+0x212>
 8000a5a:	2500      	movs	r5, #0
 8000a5c:	f104 0619 	add.w	r6, r4, #25
 8000a60:	e7f5      	b.n	8000a4e <_printf_i+0x22e>
 8000a62:	bf00      	nop
 8000a64:	08000d1f 	.word	0x08000d1f
 8000a68:	08000d30 	.word	0x08000d30

08000a6c <memcpy>:
 8000a6c:	440a      	add	r2, r1
 8000a6e:	4291      	cmp	r1, r2
 8000a70:	f100 33ff 	add.w	r3, r0, #4294967295
 8000a74:	d100      	bne.n	8000a78 <memcpy+0xc>
 8000a76:	4770      	bx	lr
 8000a78:	b510      	push	{r4, lr}
 8000a7a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8000a7e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8000a82:	4291      	cmp	r1, r2
 8000a84:	d1f9      	bne.n	8000a7a <memcpy+0xe>
 8000a86:	bd10      	pop	{r4, pc}

08000a88 <memmove>:
 8000a88:	4288      	cmp	r0, r1
 8000a8a:	b510      	push	{r4, lr}
 8000a8c:	eb01 0402 	add.w	r4, r1, r2
 8000a90:	d902      	bls.n	8000a98 <memmove+0x10>
 8000a92:	4284      	cmp	r4, r0
 8000a94:	4623      	mov	r3, r4
 8000a96:	d807      	bhi.n	8000aa8 <memmove+0x20>
 8000a98:	1e43      	subs	r3, r0, #1
 8000a9a:	42a1      	cmp	r1, r4
 8000a9c:	d008      	beq.n	8000ab0 <memmove+0x28>
 8000a9e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8000aa2:	f803 2f01 	strb.w	r2, [r3, #1]!
 8000aa6:	e7f8      	b.n	8000a9a <memmove+0x12>
 8000aa8:	4402      	add	r2, r0
 8000aaa:	4601      	mov	r1, r0
 8000aac:	428a      	cmp	r2, r1
 8000aae:	d100      	bne.n	8000ab2 <memmove+0x2a>
 8000ab0:	bd10      	pop	{r4, pc}
 8000ab2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8000ab6:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8000aba:	e7f7      	b.n	8000aac <memmove+0x24>

08000abc <_free_r>:
 8000abc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000abe:	2900      	cmp	r1, #0
 8000ac0:	d048      	beq.n	8000b54 <_free_r+0x98>
 8000ac2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000ac6:	9001      	str	r0, [sp, #4]
 8000ac8:	2b00      	cmp	r3, #0
 8000aca:	f1a1 0404 	sub.w	r4, r1, #4
 8000ace:	bfb8      	it	lt
 8000ad0:	18e4      	addlt	r4, r4, r3
 8000ad2:	f000 f8d3 	bl	8000c7c <__malloc_lock>
 8000ad6:	4a20      	ldr	r2, [pc, #128]	; (8000b58 <_free_r+0x9c>)
 8000ad8:	9801      	ldr	r0, [sp, #4]
 8000ada:	6813      	ldr	r3, [r2, #0]
 8000adc:	4615      	mov	r5, r2
 8000ade:	b933      	cbnz	r3, 8000aee <_free_r+0x32>
 8000ae0:	6063      	str	r3, [r4, #4]
 8000ae2:	6014      	str	r4, [r2, #0]
 8000ae4:	b003      	add	sp, #12
 8000ae6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000aea:	f000 b8cd 	b.w	8000c88 <__malloc_unlock>
 8000aee:	42a3      	cmp	r3, r4
 8000af0:	d90b      	bls.n	8000b0a <_free_r+0x4e>
 8000af2:	6821      	ldr	r1, [r4, #0]
 8000af4:	1862      	adds	r2, r4, r1
 8000af6:	4293      	cmp	r3, r2
 8000af8:	bf04      	itt	eq
 8000afa:	681a      	ldreq	r2, [r3, #0]
 8000afc:	685b      	ldreq	r3, [r3, #4]
 8000afe:	6063      	str	r3, [r4, #4]
 8000b00:	bf04      	itt	eq
 8000b02:	1852      	addeq	r2, r2, r1
 8000b04:	6022      	streq	r2, [r4, #0]
 8000b06:	602c      	str	r4, [r5, #0]
 8000b08:	e7ec      	b.n	8000ae4 <_free_r+0x28>
 8000b0a:	461a      	mov	r2, r3
 8000b0c:	685b      	ldr	r3, [r3, #4]
 8000b0e:	b10b      	cbz	r3, 8000b14 <_free_r+0x58>
 8000b10:	42a3      	cmp	r3, r4
 8000b12:	d9fa      	bls.n	8000b0a <_free_r+0x4e>
 8000b14:	6811      	ldr	r1, [r2, #0]
 8000b16:	1855      	adds	r5, r2, r1
 8000b18:	42a5      	cmp	r5, r4
 8000b1a:	d10b      	bne.n	8000b34 <_free_r+0x78>
 8000b1c:	6824      	ldr	r4, [r4, #0]
 8000b1e:	4421      	add	r1, r4
 8000b20:	1854      	adds	r4, r2, r1
 8000b22:	42a3      	cmp	r3, r4
 8000b24:	6011      	str	r1, [r2, #0]
 8000b26:	d1dd      	bne.n	8000ae4 <_free_r+0x28>
 8000b28:	681c      	ldr	r4, [r3, #0]
 8000b2a:	685b      	ldr	r3, [r3, #4]
 8000b2c:	6053      	str	r3, [r2, #4]
 8000b2e:	4421      	add	r1, r4
 8000b30:	6011      	str	r1, [r2, #0]
 8000b32:	e7d7      	b.n	8000ae4 <_free_r+0x28>
 8000b34:	d902      	bls.n	8000b3c <_free_r+0x80>
 8000b36:	230c      	movs	r3, #12
 8000b38:	6003      	str	r3, [r0, #0]
 8000b3a:	e7d3      	b.n	8000ae4 <_free_r+0x28>
 8000b3c:	6825      	ldr	r5, [r4, #0]
 8000b3e:	1961      	adds	r1, r4, r5
 8000b40:	428b      	cmp	r3, r1
 8000b42:	bf04      	itt	eq
 8000b44:	6819      	ldreq	r1, [r3, #0]
 8000b46:	685b      	ldreq	r3, [r3, #4]
 8000b48:	6063      	str	r3, [r4, #4]
 8000b4a:	bf04      	itt	eq
 8000b4c:	1949      	addeq	r1, r1, r5
 8000b4e:	6021      	streq	r1, [r4, #0]
 8000b50:	6054      	str	r4, [r2, #4]
 8000b52:	e7c7      	b.n	8000ae4 <_free_r+0x28>
 8000b54:	b003      	add	sp, #12
 8000b56:	bd30      	pop	{r4, r5, pc}
 8000b58:	20000100 	.word	0x20000100

08000b5c <_malloc_r>:
 8000b5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b5e:	1ccd      	adds	r5, r1, #3
 8000b60:	f025 0503 	bic.w	r5, r5, #3
 8000b64:	3508      	adds	r5, #8
 8000b66:	2d0c      	cmp	r5, #12
 8000b68:	bf38      	it	cc
 8000b6a:	250c      	movcc	r5, #12
 8000b6c:	2d00      	cmp	r5, #0
 8000b6e:	4606      	mov	r6, r0
 8000b70:	db01      	blt.n	8000b76 <_malloc_r+0x1a>
 8000b72:	42a9      	cmp	r1, r5
 8000b74:	d903      	bls.n	8000b7e <_malloc_r+0x22>
 8000b76:	230c      	movs	r3, #12
 8000b78:	6033      	str	r3, [r6, #0]
 8000b7a:	2000      	movs	r0, #0
 8000b7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b7e:	f000 f87d 	bl	8000c7c <__malloc_lock>
 8000b82:	4921      	ldr	r1, [pc, #132]	; (8000c08 <_malloc_r+0xac>)
 8000b84:	680a      	ldr	r2, [r1, #0]
 8000b86:	4614      	mov	r4, r2
 8000b88:	b99c      	cbnz	r4, 8000bb2 <_malloc_r+0x56>
 8000b8a:	4f20      	ldr	r7, [pc, #128]	; (8000c0c <_malloc_r+0xb0>)
 8000b8c:	683b      	ldr	r3, [r7, #0]
 8000b8e:	b923      	cbnz	r3, 8000b9a <_malloc_r+0x3e>
 8000b90:	4621      	mov	r1, r4
 8000b92:	4630      	mov	r0, r6
 8000b94:	f000 f862 	bl	8000c5c <_sbrk_r>
 8000b98:	6038      	str	r0, [r7, #0]
 8000b9a:	4629      	mov	r1, r5
 8000b9c:	4630      	mov	r0, r6
 8000b9e:	f000 f85d 	bl	8000c5c <_sbrk_r>
 8000ba2:	1c43      	adds	r3, r0, #1
 8000ba4:	d123      	bne.n	8000bee <_malloc_r+0x92>
 8000ba6:	230c      	movs	r3, #12
 8000ba8:	6033      	str	r3, [r6, #0]
 8000baa:	4630      	mov	r0, r6
 8000bac:	f000 f86c 	bl	8000c88 <__malloc_unlock>
 8000bb0:	e7e3      	b.n	8000b7a <_malloc_r+0x1e>
 8000bb2:	6823      	ldr	r3, [r4, #0]
 8000bb4:	1b5b      	subs	r3, r3, r5
 8000bb6:	d417      	bmi.n	8000be8 <_malloc_r+0x8c>
 8000bb8:	2b0b      	cmp	r3, #11
 8000bba:	d903      	bls.n	8000bc4 <_malloc_r+0x68>
 8000bbc:	6023      	str	r3, [r4, #0]
 8000bbe:	441c      	add	r4, r3
 8000bc0:	6025      	str	r5, [r4, #0]
 8000bc2:	e004      	b.n	8000bce <_malloc_r+0x72>
 8000bc4:	6863      	ldr	r3, [r4, #4]
 8000bc6:	42a2      	cmp	r2, r4
 8000bc8:	bf0c      	ite	eq
 8000bca:	600b      	streq	r3, [r1, #0]
 8000bcc:	6053      	strne	r3, [r2, #4]
 8000bce:	4630      	mov	r0, r6
 8000bd0:	f000 f85a 	bl	8000c88 <__malloc_unlock>
 8000bd4:	f104 000b 	add.w	r0, r4, #11
 8000bd8:	1d23      	adds	r3, r4, #4
 8000bda:	f020 0007 	bic.w	r0, r0, #7
 8000bde:	1ac2      	subs	r2, r0, r3
 8000be0:	d0cc      	beq.n	8000b7c <_malloc_r+0x20>
 8000be2:	1a1b      	subs	r3, r3, r0
 8000be4:	50a3      	str	r3, [r4, r2]
 8000be6:	e7c9      	b.n	8000b7c <_malloc_r+0x20>
 8000be8:	4622      	mov	r2, r4
 8000bea:	6864      	ldr	r4, [r4, #4]
 8000bec:	e7cc      	b.n	8000b88 <_malloc_r+0x2c>
 8000bee:	1cc4      	adds	r4, r0, #3
 8000bf0:	f024 0403 	bic.w	r4, r4, #3
 8000bf4:	42a0      	cmp	r0, r4
 8000bf6:	d0e3      	beq.n	8000bc0 <_malloc_r+0x64>
 8000bf8:	1a21      	subs	r1, r4, r0
 8000bfa:	4630      	mov	r0, r6
 8000bfc:	f000 f82e 	bl	8000c5c <_sbrk_r>
 8000c00:	3001      	adds	r0, #1
 8000c02:	d1dd      	bne.n	8000bc0 <_malloc_r+0x64>
 8000c04:	e7cf      	b.n	8000ba6 <_malloc_r+0x4a>
 8000c06:	bf00      	nop
 8000c08:	20000100 	.word	0x20000100
 8000c0c:	20000104 	.word	0x20000104

08000c10 <_realloc_r>:
 8000c10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c12:	4607      	mov	r7, r0
 8000c14:	4614      	mov	r4, r2
 8000c16:	460e      	mov	r6, r1
 8000c18:	b921      	cbnz	r1, 8000c24 <_realloc_r+0x14>
 8000c1a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8000c1e:	4611      	mov	r1, r2
 8000c20:	f7ff bf9c 	b.w	8000b5c <_malloc_r>
 8000c24:	b922      	cbnz	r2, 8000c30 <_realloc_r+0x20>
 8000c26:	f7ff ff49 	bl	8000abc <_free_r>
 8000c2a:	4625      	mov	r5, r4
 8000c2c:	4628      	mov	r0, r5
 8000c2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000c30:	f000 f830 	bl	8000c94 <_malloc_usable_size_r>
 8000c34:	42a0      	cmp	r0, r4
 8000c36:	d20f      	bcs.n	8000c58 <_realloc_r+0x48>
 8000c38:	4621      	mov	r1, r4
 8000c3a:	4638      	mov	r0, r7
 8000c3c:	f7ff ff8e 	bl	8000b5c <_malloc_r>
 8000c40:	4605      	mov	r5, r0
 8000c42:	2800      	cmp	r0, #0
 8000c44:	d0f2      	beq.n	8000c2c <_realloc_r+0x1c>
 8000c46:	4631      	mov	r1, r6
 8000c48:	4622      	mov	r2, r4
 8000c4a:	f7ff ff0f 	bl	8000a6c <memcpy>
 8000c4e:	4631      	mov	r1, r6
 8000c50:	4638      	mov	r0, r7
 8000c52:	f7ff ff33 	bl	8000abc <_free_r>
 8000c56:	e7e9      	b.n	8000c2c <_realloc_r+0x1c>
 8000c58:	4635      	mov	r5, r6
 8000c5a:	e7e7      	b.n	8000c2c <_realloc_r+0x1c>

08000c5c <_sbrk_r>:
 8000c5c:	b538      	push	{r3, r4, r5, lr}
 8000c5e:	4d06      	ldr	r5, [pc, #24]	; (8000c78 <_sbrk_r+0x1c>)
 8000c60:	2300      	movs	r3, #0
 8000c62:	4604      	mov	r4, r0
 8000c64:	4608      	mov	r0, r1
 8000c66:	602b      	str	r3, [r5, #0]
 8000c68:	f000 f81e 	bl	8000ca8 <_sbrk>
 8000c6c:	1c43      	adds	r3, r0, #1
 8000c6e:	d102      	bne.n	8000c76 <_sbrk_r+0x1a>
 8000c70:	682b      	ldr	r3, [r5, #0]
 8000c72:	b103      	cbz	r3, 8000c76 <_sbrk_r+0x1a>
 8000c74:	6023      	str	r3, [r4, #0]
 8000c76:	bd38      	pop	{r3, r4, r5, pc}
 8000c78:	2000010c 	.word	0x2000010c

08000c7c <__malloc_lock>:
 8000c7c:	4801      	ldr	r0, [pc, #4]	; (8000c84 <__malloc_lock+0x8>)
 8000c7e:	f000 b811 	b.w	8000ca4 <__retarget_lock_acquire_recursive>
 8000c82:	bf00      	nop
 8000c84:	20000114 	.word	0x20000114

08000c88 <__malloc_unlock>:
 8000c88:	4801      	ldr	r0, [pc, #4]	; (8000c90 <__malloc_unlock+0x8>)
 8000c8a:	f000 b80c 	b.w	8000ca6 <__retarget_lock_release_recursive>
 8000c8e:	bf00      	nop
 8000c90:	20000114 	.word	0x20000114

08000c94 <_malloc_usable_size_r>:
 8000c94:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000c98:	1f18      	subs	r0, r3, #4
 8000c9a:	2b00      	cmp	r3, #0
 8000c9c:	bfbc      	itt	lt
 8000c9e:	580b      	ldrlt	r3, [r1, r0]
 8000ca0:	18c0      	addlt	r0, r0, r3
 8000ca2:	4770      	bx	lr

08000ca4 <__retarget_lock_acquire_recursive>:
 8000ca4:	4770      	bx	lr

08000ca6 <__retarget_lock_release_recursive>:
 8000ca6:	4770      	bx	lr

08000ca8 <_sbrk>:
 8000ca8:	4b04      	ldr	r3, [pc, #16]	; (8000cbc <_sbrk+0x14>)
 8000caa:	6819      	ldr	r1, [r3, #0]
 8000cac:	4602      	mov	r2, r0
 8000cae:	b909      	cbnz	r1, 8000cb4 <_sbrk+0xc>
 8000cb0:	4903      	ldr	r1, [pc, #12]	; (8000cc0 <_sbrk+0x18>)
 8000cb2:	6019      	str	r1, [r3, #0]
 8000cb4:	6818      	ldr	r0, [r3, #0]
 8000cb6:	4402      	add	r2, r0
 8000cb8:	601a      	str	r2, [r3, #0]
 8000cba:	4770      	bx	lr
 8000cbc:	20000108 	.word	0x20000108
 8000cc0:	20000120 	.word	0x20000120

08000cc4 <_init>:
 8000cc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cc6:	bf00      	nop
 8000cc8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000cca:	bc08      	pop	{r3}
 8000ccc:	469e      	mov	lr, r3
 8000cce:	4770      	bx	lr

08000cd0 <_fini>:
 8000cd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cd2:	bf00      	nop
 8000cd4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000cd6:	bc08      	pop	{r3}
 8000cd8:	469e      	mov	lr, r3
 8000cda:	4770      	bx	lr
